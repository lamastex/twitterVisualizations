{"ast":null,"code":"import * as d3 from 'd3';\n/*\nCreate accessors that specify data from the csv-file\n*/\n\nexport const x = d => d.NrOfRetweets;\nexport const y = d => d.NrOfRetweeters;\nexport const radius = d => d.followersCount;\nexport const color = d => d.followersCount;\nexport const name = d => d.ScreenName;\nexport const id = d => d.UserId; // Returns the largest x-value in the data.\n\nexport const getMaxX = data => Math.max(...data.map(d => x(d))); //Returns the largest y-value in the data.\n\nexport const getMaxY = data => Math.max(...data.map(d => y(d))); //Returns the largest radius in the data.\n\nexport const getMaxRadius = data => Math.max(...data.map(d => radius(d))); //Returns the \"largest\" color in the data.\n\nexport const getMaxColor = data => {\n  var maxColor = Math.max(...data.map(d => color(d)));\n  var cutOff = 10000;\n  if (maxColor > cutOff) return cutOff;\n  return maxColor;\n}; //Order so that largest circle gets placed deepest.\n\nexport const orderLargestBelow = (a, b) => radius(b) - radius(a);","map":{"version":3,"sources":["/Users/ammaraldhahyani/Desktop/twitter.visual/twitterVisualizations/src/helpers/treeHelpers.js"],"names":["d3","x","d","NrOfRetweets","y","NrOfRetweeters","radius","followersCount","color","name","ScreenName","id","UserId","getMaxX","data","Math","max","map","getMaxY","getMaxRadius","getMaxColor","maxColor","cutOff","orderLargestBelow","a","b"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,CAAC,GAAIC,CAAD,IAAOA,CAAC,CAACC,YAAnB;AACP,OAAO,MAAMC,CAAC,GAAIF,CAAD,IAAOA,CAAC,CAACG,cAAnB;AACP,OAAO,MAAMC,MAAM,GAAIJ,CAAD,IAAOA,CAAC,CAACK,cAAxB;AACP,OAAO,MAAMC,KAAK,GAAIN,CAAD,IAAOA,CAAC,CAACK,cAAvB;AACP,OAAO,MAAME,IAAI,GAAIP,CAAD,IAAOA,CAAC,CAACQ,UAAtB;AACP,OAAO,MAAMC,EAAE,GAAIT,CAAD,IAAOA,CAAC,CAACU,MAApB,C,CAEP;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAUC,IAAI,CAACC,GAAL,CAAS,GAAGF,IAAI,CAACG,GAAL,CAAUf,CAAD,IAAOD,CAAC,CAACC,CAAD,CAAjB,CAAZ,CAA1B,C,CAEP;;AACA,OAAO,MAAMgB,OAAO,GAAIJ,IAAD,IAAUC,IAAI,CAACC,GAAL,CAAS,GAAGF,IAAI,CAACG,GAAL,CAAUf,CAAD,IAAOE,CAAC,CAACF,CAAD,CAAjB,CAAZ,CAA1B,C,CAEP;;AACA,OAAO,MAAMiB,YAAY,GAAIL,IAAD,IAAUC,IAAI,CAACC,GAAL,CAAS,GAAGF,IAAI,CAACG,GAAL,CAAUf,CAAD,IAAOI,MAAM,CAACJ,CAAD,CAAtB,CAAZ,CAA/B,C,CAEP;;AACA,OAAO,MAAMkB,WAAW,GAAIN,IAAD,IAAU;AACnC,MAAIO,QAAQ,GAAGN,IAAI,CAACC,GAAL,CAAS,GAAGF,IAAI,CAACG,GAAL,CAAUf,CAAD,IAAOM,KAAK,CAACN,CAAD,CAArB,CAAZ,CAAf;AACA,MAAIoB,MAAM,GAAG,KAAb;AAEA,MAAID,QAAQ,GAAGC,MAAf,EAAuB,OAAOA,MAAP;AACvB,SAAOD,QAAP;AACD,CANM,C,CASP;;AACA,OAAO,MAAME,iBAAiB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUnB,MAAM,CAACmB,CAAD,CAAN,GAAYnB,MAAM,CAACkB,CAAD,CAAtD","sourcesContent":["import * as d3 from 'd3'\n\n/*\nCreate accessors that specify data from the csv-file\n*/\nexport const x = (d) => d.NrOfRetweets;\nexport const y = (d) => d.NrOfRetweeters;\nexport const radius = (d) => d.followersCount;\nexport const color = (d) => d.followersCount;\nexport const name = (d) => d.ScreenName;\nexport const id = (d) => d.UserId;\n\n// Returns the largest x-value in the data.\nexport const getMaxX = (data) => Math.max(...data.map((d) => x(d)));\n\n//Returns the largest y-value in the data.\nexport const getMaxY = (data) => Math.max(...data.map((d) => y(d)));\n\n//Returns the largest radius in the data.\nexport const getMaxRadius = (data) => Math.max(...data.map((d) => radius(d)));\n\n//Returns the \"largest\" color in the data.\nexport const getMaxColor = (data) => {\n  var maxColor = Math.max(...data.map((d) => color(d)));\n  var cutOff = 10000;\n\n  if (maxColor > cutOff) return cutOff;\n  return maxColor;\n};\n\n\n//Order so that largest circle gets placed deepest.\nexport const orderLargestBelow = (a, b) => radius(b) - radius(a)\n\n"]},"metadata":{},"sourceType":"module"}