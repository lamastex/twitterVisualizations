{"ast":null,"code":"var _jsxFileName = \"/Users/ammaraldhahyani/Desktop/twitter.visual/twitterVisualizations/src/components/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../data/dummy_tree.json\";\nimport { getMaxX, getMaxY, getMaxRadius, getMaxColor, orderLargestBelow, x, y, radius, color, name, id } from \"../helpers/treeHelpers\";\n/*\nSpecify circle constants\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar circleMaxRadius = 8;\nvar circleMinRadius = 3;\nvar circleEnlargeConstant = 2;\nvar circleIdleOpacity = 0.2;\nvar circleActiveOpacity = 1;\nvar circleClickedStrokeWidth = 4;\n/*\nCreate our user of interest\n*/\n\nvar userOfInterest = {\n  UserID: \"123456789\" // Add the user of interest if wanted\n\n};\n/*\nCreate id-functions\n*/\n\nconst getCircleId = d => \"circ\" + id(d);\n\nconst getTextId = d => \"text\" + id(d); //\n\n\nvar radiusScale;\nvar colorScale; //\n\nvar xScale;\nvar yScale;\n\nfunction Tree() {\n  _s();\n\n  const [tweetId, setTweetId] = useState(null);\n  const d3Tree = useRef();\n  useEffect(() => {\n    const margin = {\n      top: 50,\n      right: 30,\n      bottom: 30,\n      left: 30\n    };\n    const width = parseInt(d3.select(\"#tree\").style(\"width\")) - margin.left - margin.right;\n    const height = parseInt(d3.select(\"#tree\").style(\"height\")) - margin.top - margin.bottom; //d3.selectAll(\"svg > *\").remove();\n\n    const svg = d3.select(d3Tree.current).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom);\n    const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    /*\n    Create title\n    */\n\n    var title = g.append(\"text\").attr(\"class\", \"title\") // style in css\n    .attr(\"x\", width / 2).attr(\"y\", 0).text(\"Twitter network in 01_tree.json\");\n    xScale = d3.scaleLog().range([0, width]).domain([1, getMaxX(data)]);\n    var xAxis = d3.axisBottom(xScale).ticks(5, d3.format(\",d\"));\n    var gXAxis = g.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(\" + 0 + \",\" + height + \")\").call(xAxis); // Create x-axis label.\n\n    var xAxisLabel = g.append(\"text\").attr(\"class\", \"x label\").attr(\"text-anchor\", \"end\").attr(\"x\", width).attr(\"y\", height - 6).text(\"Number of retweets\"); //\n\n    yScale = d3.scaleLinear().range([height, 0]).domain([0, getMaxY(data)]);\n    var yAxis = d3.axisLeft(yScale);\n    var gYAxis = g.append(\"g\").attr(\"class\", \"y axis\").call(yAxis); // Create y-axis label\n\n    var yAxisLabel = g.append(\"text\").attr(\"class\", \"y label\").attr(\"text-anchor\", \"end\").attr(\"y\", 6).attr(\"dy\", \".75em\").attr(\"transform\", \"rotate(-90)\").text(\"Number of unique retweeters\");\n    /*\n    Create scale for radius\n    */\n\n    radiusScale = d3.scaleLog().base(10).range([circleMinRadius, circleMaxRadius]).domain([1, getMaxRadius(data)]);\n    /*\n    Create scale for color\n    */\n\n    colorScale = d3.scaleLinear().range([\"blue\", \"red\"]).domain([1, getMaxColor(data)]); // Enter the data\n\n    var nodes = g.append(\"g\").selectAll(\"circle\").data(data).enter().append(\"circle\").attr(\"cursor\", \"grab\").attr(\"class\", \"nodeCircle\").attr(\"data-id\", id).attr(\"id\", getCircleId).attr(\"opacity\", circleIdleOpacity).attr(\"fill\", d => colorScale(color(d))).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0).attr(\"r\", d => radiusScale(radius(d))).attr(\"cx\", d => xScale(x(d))).attr(\"cy\", d => yScale(y(d))).on(\"mouseover\", function (event, d) {\n      d3.select(event.target).attr(\"r\", 10 * circleEnlargeConstant).attr(\"opacity\", circleActiveOpacity);\n      console.log(d);\n      console.log(event.target);\n      console.log(this);\n    }).on(\"mouseout\", mouseoutCircle).on(\"click\", clickCircle).sort(orderLargestBelow);\n    svg.call(d3.zoom().scaleExtent([0.5, Infinity]).on(\"zoom\", (event, d) => {\n      {\n        // Create new x- and y-scale\n        var new_xScale = event.transform.rescaleX(xScale);\n        var new_yScale = event.transform.rescaleY(yScale); // Display new axes\n\n        gXAxis.call(xAxis.scale(new_xScale));\n        gYAxis.call(yAxis.scale(new_yScale)); // Reposition circles\n\n        d3.selectAll(\".nodeCircle\").attr(\"cx\", function (d) {\n          return new_xScale(x(d));\n        }).attr(\"cy\", function (d) {\n          return new_yScale(y(d));\n        }); // Reposition texts\n\n        d3.selectAll(\".nodeText\").attr(\"x\", function (d) {\n          return new_xScale(x(d));\n        }).attr(\"y\", function (d) {\n          return new_yScale(y(d));\n        });\n      }\n    })); // Create tooltip that shows username\n\n    nodes.append(\"text\").call(setTextAttributes); // Set appearance for user of interest\n\n    d3.select(\"#\" + getCircleId(userOfInterest)).attr(\"fill\", \"orange\");\n    g.exit().remove();\n  }, []); //Set attributes for tooltip (showing screen name) text.\n\n  const setTextAttributes = text => {\n    text.attr(\"class\", \"hidden nodeText\") // Set class to hidden upon creation\n    .attr(\"data-id\", id).attr(\"id\", getTextId).attr(\"x\", d => xScale(x(d))).attr(\"y\", d => yScale(y(d))).attr(\"dy\", d => -(circleMaxRadius * circleEnlargeConstant * 1.5)).attr(\"text-anchor\", \"beginning\").text(d => name(d));\n  }; //Handle mouse hover on circle. Display circle's screen name.\n\n\n  const mouseoverCircle = (event, d) => {\n    var theCircle = d3.select(this).attr(\"fill\", \"orange\").attr(\"r\", 10 * circleEnlargeConstant);\n  }; //Handle zoom. Zoom both x-axis and y-axis.\n\n\n  function mouseoutCircle(event, d) {\n    d3.select(event.target).attr(\"r\", 10 / circleEnlargeConstant).attr(\"opacity\", circleActiveOpacity);\n  }\n  /**\n   * Handle click on zoomable area. That is, handle click outside a node which\n   * is considered a deselecting click => deselect previously clicked node\n   * and remove displayed tweets.\n   */\n\n\n  const clickView = () => {\n    // Remove clicked status on clicked nodes\n    d3.selectAll(\".clicked\").attr(\"stroke-width\", \"0\").classed(\"clicked\", false); // Remove timeline\n    //document.getElementById(\"tweet\").innerHTML = \"\";\n    // Get the <ul> element with id=\"myList\"\n\n    var list = document.getElementById(\"theTweet\"); // If the <ul> element has any child nodes, remove its first child node\n\n    if (list.hasChildNodes()) {\n      list.removeChild(list.childNodes[0]);\n    }\n\n    document.getElementById(\"theTweet\").innerHTML = \"\";\n  };\n  /**\n   * Handle click on a tweet circle. Display the clicked tweet and let the tweet\n   * appear selected by adding a stroke to it.\n   */\n\n\n  const clickCircle = (event, d) => {\n    // Remove results from old click\n    clickView(); // Add stroke width and set clicked class\n\n    d3.select(this).attr(\"stroke-width\", circleClickedStrokeWidth).classed(\"clicked\", true);\n    console.log(d.ScreenName);\n    setTweetId(d.ScreenName);\n  };\n\n  useEffect(() => {\n    const anchor = document.createElement(\"a\");\n    anchor.setAttribute(\"class\", \"twitter-timeline\");\n    anchor.setAttribute(\"data-theme\", \"light\");\n    anchor.setAttribute(\"height\", \"800\");\n    anchor.setAttribute(\"width\", \"500\");\n    anchor.setAttribute(\"data-chrome\", \"noheader nofooter noborders\");\n    anchor.setAttribute(\"href\", `https://twitter.com/${tweetId}`);\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(anchor);\n    const script = document.createElement(\"script\");\n    script.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\n  }, [tweetId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center p-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow-lg bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tree\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: d3Tree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter-embed\",\n        id: \"theTweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tree, \"rYX3+2vWEK0gPTwx44v8z01PiRA=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["/Users/ammaraldhahyani/Desktop/twitter.visual/twitterVisualizations/src/components/Tree.js"],"names":["React","useState","useEffect","useRef","d3","data","getMaxX","getMaxY","getMaxRadius","getMaxColor","orderLargestBelow","x","y","radius","color","name","id","circleMaxRadius","circleMinRadius","circleEnlargeConstant","circleIdleOpacity","circleActiveOpacity","circleClickedStrokeWidth","userOfInterest","UserID","getCircleId","d","getTextId","radiusScale","colorScale","xScale","yScale","Tree","tweetId","setTweetId","d3Tree","margin","top","right","bottom","left","width","parseInt","select","style","height","svg","current","attr","g","append","title","text","scaleLog","range","domain","xAxis","axisBottom","ticks","format","gXAxis","call","xAxisLabel","scaleLinear","yAxis","axisLeft","gYAxis","yAxisLabel","base","nodes","selectAll","enter","on","event","target","console","log","mouseoutCircle","clickCircle","sort","zoom","scaleExtent","Infinity","new_xScale","transform","rescaleX","new_yScale","rescaleY","scale","setTextAttributes","exit","remove","mouseoverCircle","theCircle","clickView","classed","list","document","getElementById","hasChildNodes","removeChild","childNodes","innerHTML","ScreenName","anchor","createElement","setAttribute","getElementsByClassName","appendChild","script"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../data/dummy_tree.json\";\n\nimport {\n  getMaxX,\n  getMaxY,\n  getMaxRadius,\n  getMaxColor,\n  orderLargestBelow,\n  x,\n  y,\n  radius,\n  color,\n  name,\n  id,\n} from \"../helpers/treeHelpers\";\n\n/*\nSpecify circle constants\n*/\nvar circleMaxRadius = 8;\nvar circleMinRadius = 3;\nvar circleEnlargeConstant = 2;\nvar circleIdleOpacity = 0.2;\nvar circleActiveOpacity = 1;\nvar circleClickedStrokeWidth = 4;\n\n/*\nCreate our user of interest\n*/\nvar userOfInterest = {\n  UserID: \"123456789\", // Add the user of interest if wanted\n};\n\n/*\nCreate id-functions\n*/\nconst getCircleId = (d) => \"circ\" + id(d);\nconst getTextId = (d) => \"text\" + id(d);\n\n//\nvar radiusScale;\nvar colorScale;\n\n//\nvar xScale;\nvar yScale;\n\nfunction Tree() {\n  const [tweetId, setTweetId] = useState(null);\n  const d3Tree = useRef();\n\n  useEffect(() => {\n    const margin = { top: 50, right: 30, bottom: 30, left: 30 };\n    const width =\n      parseInt(d3.select(\"#tree\").style(\"width\")) - margin.left - margin.right;\n    const height =\n      parseInt(d3.select(\"#tree\").style(\"height\")) - margin.top - margin.bottom;\n    //d3.selectAll(\"svg > *\").remove();\n    const svg = d3\n      .select(d3Tree.current)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    /*\nCreate title\n*/\n    var title = g\n      .append(\"text\")\n      .attr(\"class\", \"title\") // style in css\n      .attr(\"x\", width / 2)\n      .attr(\"y\", 0)\n      .text(\"Twitter network in 01_tree.json\");\n\n    xScale = d3\n      .scaleLog()\n      .range([0, width])\n      .domain([1, getMaxX(data)]);\n    var xAxis = d3.axisBottom(xScale).ticks(5, d3.format(\",d\"));\n    var gXAxis = g\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(\" + 0 + \",\" + height + \")\")\n      .call(xAxis);\n\n    // Create x-axis label.\n    var xAxisLabel = g\n      .append(\"text\")\n      .attr(\"class\", \"x label\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height - 6)\n      .text(\"Number of retweets\");\n    //\n\n    yScale = d3\n      .scaleLinear()\n      .range([height, 0])\n      .domain([0, getMaxY(data)]);\n    var yAxis = d3.axisLeft(yScale);\n    var gYAxis = g.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n\n    // Create y-axis label\n    var yAxisLabel = g\n      .append(\"text\")\n      .attr(\"class\", \"y label\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".75em\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"Number of unique retweeters\");\n\n    /*\n  Create scale for radius\n  */\n    radiusScale = d3\n      .scaleLog()\n      .base(10)\n      .range([circleMinRadius, circleMaxRadius])\n      .domain([1, getMaxRadius(data)]);\n\n    /*\n  Create scale for color\n  */\n    colorScale = d3\n      .scaleLinear()\n      .range([\"blue\", \"red\"])\n      .domain([1, getMaxColor(data)]);\n\n    // Enter the data\n    var nodes = g\n      .append(\"g\")\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cursor\", \"grab\")\n      .attr(\"class\", \"nodeCircle\")\n      .attr(\"data-id\", id)\n      .attr(\"id\", getCircleId)\n      .attr(\"opacity\", circleIdleOpacity)\n      .attr(\"fill\", (d) => colorScale(color(d)))\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 0)\n      .attr(\"r\", (d) => radiusScale(radius(d)))\n      .attr(\"cx\", (d) => xScale(x(d)))\n      .attr(\"cy\", (d) => yScale(y(d)))\n      .on(\"mouseover\", function (event, d) {\n        d3.select(event.target)\n          .attr(\"r\", 10 * circleEnlargeConstant)\n          .attr(\"opacity\", circleActiveOpacity);\n\n        console.log(d);\n        console.log(event.target);\n        console.log(this);\n\n    \n      })\n      .on(\"mouseout\", mouseoutCircle)\n      .on(\"click\", clickCircle)\n      .sort(orderLargestBelow);\n\n    svg.call(\n      d3\n        .zoom()\n\n        .scaleExtent([0.5, Infinity])\n        .on(\"zoom\", (event, d) => {\n          {\n            // Create new x- and y-scale\n            var new_xScale = event.transform.rescaleX(xScale);\n            var new_yScale = event.transform.rescaleY(yScale);\n\n            // Display new axes\n            gXAxis.call(xAxis.scale(new_xScale));\n            gYAxis.call(yAxis.scale(new_yScale));\n\n            // Reposition circles\n            d3.selectAll(\".nodeCircle\")\n              .attr(\"cx\", function (d) {\n                return new_xScale(x(d));\n              })\n              .attr(\"cy\", function (d) {\n                return new_yScale(y(d));\n              });\n\n\n            // Reposition texts\n            d3.selectAll(\".nodeText\")\n              .attr(\"x\", function (d) {\n                return new_xScale(x(d));\n              })\n              .attr(\"y\", function (d) {\n                return new_yScale(y(d));\n              });\n          }\n        })\n    );\n\n    // Create tooltip that shows username\n    nodes.append(\"text\").call(setTextAttributes);\n\n    // Set appearance for user of interest\n    d3.select(\"#\" + getCircleId(userOfInterest)).attr(\"fill\", \"orange\");\n\n    g.exit().remove();\n  }, []);\n\n\n\n  //Set attributes for tooltip (showing screen name) text.\n  const setTextAttributes = (text) => {\n    text\n      .attr(\"class\", \"hidden nodeText\") // Set class to hidden upon creation\n      .attr(\"data-id\", id)\n      .attr(\"id\", getTextId)\n      .attr(\"x\", (d) => xScale(x(d)))\n      .attr(\"y\", (d) => yScale(y(d)))\n      .attr(\"dy\", (d) => -(circleMaxRadius * circleEnlargeConstant * 1.5))\n      .attr(\"text-anchor\", \"beginning\")\n      .text((d) => name(d));\n  };\n\n  //Handle mouse hover on circle. Display circle's screen name.\n  const mouseoverCircle = (event, d) => {\n    var theCircle = d3\n      .select(this)\n      .attr(\"fill\", \"orange\")\n      .attr(\"r\", 10 * circleEnlargeConstant);\n\n  };\n\n  //Handle zoom. Zoom both x-axis and y-axis.\n\n  function mouseoutCircle(event, d) {\n    d3.select(event.target)\n      .attr(\"r\", 10 / circleEnlargeConstant)\n      .attr(\"opacity\", circleActiveOpacity);\n \n  }\n\n  /**\n   * Handle click on zoomable area. That is, handle click outside a node which\n   * is considered a deselecting click => deselect previously clicked node\n   * and remove displayed tweets.\n   */\n  const clickView = () => {\n    // Remove clicked status on clicked nodes\n    d3.selectAll(\".clicked\")\n      .attr(\"stroke-width\", \"0\")\n      .classed(\"clicked\", false);\n\n    // Remove timeline\n    //document.getElementById(\"tweet\").innerHTML = \"\";\n\n    // Get the <ul> element with id=\"myList\"\n    var list = document.getElementById(\"theTweet\");\n\n    // If the <ul> element has any child nodes, remove its first child node\n    if (list.hasChildNodes()) {\n      list.removeChild(list.childNodes[0]);\n    }\n\n    document.getElementById(\"theTweet\").innerHTML = \"\";\n\n\n  };\n\n  /**\n   * Handle click on a tweet circle. Display the clicked tweet and let the tweet\n   * appear selected by adding a stroke to it.\n   */\n  const clickCircle = (event, d) => {\n    // Remove results from old click\n    clickView();\n\n    // Add stroke width and set clicked class\n    d3.select(this)\n      .attr(\"stroke-width\", circleClickedStrokeWidth)\n      .classed(\"clicked\", true);\n\n    console.log(d.ScreenName);\n    setTweetId(d.ScreenName);\n  };\n\n  useEffect(() => {\n    const anchor = document.createElement(\"a\");\n    anchor.setAttribute(\"class\", \"twitter-timeline\");\n    anchor.setAttribute(\"data-theme\", \"light\");\n    anchor.setAttribute(\"height\", \"800\");\n    anchor.setAttribute(\"width\", \"500\");\n    anchor.setAttribute(\"data-chrome\", \"noheader nofooter noborders\");\n    anchor.setAttribute(\"href\", `https://twitter.com/${tweetId}`);\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(anchor);\n\n    const script = document.createElement(\"script\");\n    script.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\n  }, [tweetId]);\n\n  return (\n    <div className=\"flex justify-center items-center p-20\">\n      <div className=\"shadow-lg bg-gray-100\">\n        <div id=\"tree\">\n          <svg ref={d3Tree}></svg>\n        </div>\n        <div className=\"twitter-embed\" id=\"theTweet\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tree;\n"]},"metadata":{},"sourceType":"module"}